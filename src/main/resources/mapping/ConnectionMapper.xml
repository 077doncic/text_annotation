<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.annotation.mapper.ConnectionMapper">
	<resultMap id="BaseResultMap"
		type="com.annotation.pojo.Connection">
		<id column="connection_id" jdbcType="INTEGER"
			property="connectionId" />
		<result column="text" jdbcType="VARCHAR" property="text" />
	</resultMap>
	<sql id="Base_Column_List">
		connection_id, text
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from connection
		where connection_id = #{connectionId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from connection
		where connection_id = #{connectionId,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.annotation.pojo.Connection" 
		useGeneratedKeys="true" keyProperty="connectionId" keyColumn="connection_id">
		insert into connection (connection_id, text)
		values (#{connectionId,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.annotation.pojo.Connection">
		insert into connection
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="connectionId != null">
				connection_id,
			</if>
			<if test="text != null">
				text,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="connectionId != null">
				#{connectionId,jdbcType=INTEGER},
			</if>
			<if test="text != null">
				#{text,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.annotation.pojo.Connection">
		update connection
		<set>
			<if test="text != null">
				text = #{text,jdbcType=VARCHAR},
			</if>
		</set>
		where connection_id = #{connectionId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.annotation.pojo.Connection">
		update connection
		set text = #{text,jdbcType=VARCHAR}
		where connection_id = #{connectionId,jdbcType=INTEGER}
	</update>
	<select id="selectConnectionsByProjectId"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select c.connection_id,
		c.text
		from connection c
		left join project_connection pc on
		pc.connection_id = c.connection_id
		left join project p on p.project_id
		= pc.project_id
		where pc.project_id = #{projectId,jdbcType=INTEGER}
	</select>
</mapper>