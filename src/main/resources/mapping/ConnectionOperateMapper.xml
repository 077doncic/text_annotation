<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.annotation.mapper.ConnectionOperateMapper">
	<resultMap id="BaseResultMap"
		type="com.annotation.pojo.ConnectionOperate">
		<id column="project_id" jdbcType="INTEGER" property="projectId" />
		<id column="connectionl_id" jdbcType="INTEGER"
			property="connectionlId" />
		<result column="sentence_id" jdbcType="INTEGER"
			property="sentenceId" />
		<result column="category_id" jdbcType="INTEGER"
			property="categoryId" />
		<result column="from_id" jdbcType="INTEGER" property="fromId" />
		<result column="to_id" jdbcType="INTEGER" property="toId" />
	</resultMap>
	<sql id="Base_Column_List">
		project_id, connectionl_id, sentence_id, category_id, from_id, to_id
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="com.annotation.pojo.ConnectionOperateKey"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from connection_operate
		where project_id = #{projectId,jdbcType=INTEGER}
		and connectionl_id = #{connectionlId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="com.annotation.pojo.ConnectionOperateKey">
		delete from connection_operate
		where project_id = #{projectId,jdbcType=INTEGER}
		and connectionl_id = #{connectionlId,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.annotation.pojo.ConnectionOperate">
		insert into connection_operate (project_id, connectionl_id, sentence_id,
		category_id, from_id, to_id
		)
		values (#{projectId,jdbcType=INTEGER}, #{connectionlId,jdbcType=INTEGER},
		#{sentenceId,jdbcType=INTEGER},
		#{categoryId,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.annotation.pojo.ConnectionOperate">
		insert into connection_operate
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="projectId != null">
				project_id,
			</if>
			<if test="connectionlId != null">
				connectionl_id,
			</if>
			<if test="sentenceId != null">
				sentence_id,
			</if>
			<if test="categoryId != null">
				category_id,
			</if>
			<if test="fromId != null">
				from_id,
			</if>
			<if test="toId != null">
				to_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="projectId != null">
				#{projectId,jdbcType=INTEGER},
			</if>
			<if test="connectionlId != null">
				#{connectionlId,jdbcType=INTEGER},
			</if>
			<if test="sentenceId != null">
				#{sentenceId,jdbcType=INTEGER},
			</if>
			<if test="categoryId != null">
				#{categoryId,jdbcType=INTEGER},
			</if>
			<if test="fromId != null">
				#{fromId,jdbcType=INTEGER},
			</if>
			<if test="toId != null">
				#{toId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.annotation.pojo.ConnectionOperate">
		update connection_operate
		<set>
			<if test="sentenceId != null">
				sentence_id = #{sentenceId,jdbcType=INTEGER},
			</if>
			<if test="categoryId != null">
				category_id = #{categoryId,jdbcType=INTEGER},
			</if>
			<if test="fromId != null">
				from_id = #{fromId,jdbcType=INTEGER},
			</if>
			<if test="toId != null">
				to_id = #{toId,jdbcType=INTEGER},
			</if>
		</set>
		where project_id = #{projectId,jdbcType=INTEGER}
		and connectionl_id = #{connectionlId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.annotation.pojo.ConnectionOperate">
		update connection_operate
		set sentence_id = #{sentenceId,jdbcType=INTEGER},
		category_id = #{categoryId,jdbcType=INTEGER},
		from_id = #{fromId,jdbcType=INTEGER},
		to_id = #{toId,jdbcType=INTEGER}
		where project_id = #{projectId,jdbcType=INTEGER}
		and connectionl_id = #{connectionlId,jdbcType=INTEGER}
	</update>
	<delete id="deleteByProjectIdAndSentenceId"
		parameterType="java.util.Map">
		delete from connection_operate
		where project_id =
		#{projectId,jdbcType=INTEGER}
		and sentence_id =
		#{sentenceId,jdbcType=INTEGER}
	</delete>
	<select id="selectByProjectIdAndSentenceId"
		parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from connection_operate
		where project_id = #{projectId,jdbcType=INTEGER}
		and
		sentence_id = #{sentenceId,jdbcType=INTEGER}
	</select>
</mapper>